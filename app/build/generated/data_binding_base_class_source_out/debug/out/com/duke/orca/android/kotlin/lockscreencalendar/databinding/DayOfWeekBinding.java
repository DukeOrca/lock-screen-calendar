// Generated by view binder compiler. Do not edit!
package com.duke.orca.android.kotlin.lockscreencalendar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.duke.orca.android.kotlin.lockscreencalendar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DayOfWeekBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textViewFriday;

  @NonNull
  public final TextView textViewMonday;

  @NonNull
  public final TextView textViewSaturday;

  @NonNull
  public final TextView textViewSunday;

  @NonNull
  public final TextView textViewThursday;

  @NonNull
  public final TextView textViewTuesday;

  @NonNull
  public final TextView textViewWednesday;

  private DayOfWeekBinding(@NonNull LinearLayout rootView, @NonNull TextView textViewFriday,
      @NonNull TextView textViewMonday, @NonNull TextView textViewSaturday,
      @NonNull TextView textViewSunday, @NonNull TextView textViewThursday,
      @NonNull TextView textViewTuesday, @NonNull TextView textViewWednesday) {
    this.rootView = rootView;
    this.textViewFriday = textViewFriday;
    this.textViewMonday = textViewMonday;
    this.textViewSaturday = textViewSaturday;
    this.textViewSunday = textViewSunday;
    this.textViewThursday = textViewThursday;
    this.textViewTuesday = textViewTuesday;
    this.textViewWednesday = textViewWednesday;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DayOfWeekBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DayOfWeekBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.day_of_week, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DayOfWeekBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_view_friday;
      TextView textViewFriday = ViewBindings.findChildViewById(rootView, id);
      if (textViewFriday == null) {
        break missingId;
      }

      id = R.id.text_view_monday;
      TextView textViewMonday = ViewBindings.findChildViewById(rootView, id);
      if (textViewMonday == null) {
        break missingId;
      }

      id = R.id.text_view_saturday;
      TextView textViewSaturday = ViewBindings.findChildViewById(rootView, id);
      if (textViewSaturday == null) {
        break missingId;
      }

      id = R.id.text_view_sunday;
      TextView textViewSunday = ViewBindings.findChildViewById(rootView, id);
      if (textViewSunday == null) {
        break missingId;
      }

      id = R.id.text_view_thursday;
      TextView textViewThursday = ViewBindings.findChildViewById(rootView, id);
      if (textViewThursday == null) {
        break missingId;
      }

      id = R.id.text_view_tuesday;
      TextView textViewTuesday = ViewBindings.findChildViewById(rootView, id);
      if (textViewTuesday == null) {
        break missingId;
      }

      id = R.id.text_view_wednesday;
      TextView textViewWednesday = ViewBindings.findChildViewById(rootView, id);
      if (textViewWednesday == null) {
        break missingId;
      }

      return new DayOfWeekBinding((LinearLayout) rootView, textViewFriday, textViewMonday,
          textViewSaturday, textViewSunday, textViewThursday, textViewTuesday, textViewWednesday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
